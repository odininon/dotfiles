#
# NOTE: This file is renamed to .gitconfig by my install script, and a .postinstall script sets
# name/email/signingkey.
# 
[core]
	editor = vim
	pager = less -FRX
	excludesfile = /Users/mstenge/.gitignore_global
[gist]
	private = yes
[branch "master"]
	remote = origin
	merge = refs/heads/master
[log]
	decorate = short
[push]
	default = current
[difftool]
	prompt = false
[mergetool]
	prompt = false
	keepBackup = false
[pull]
	default = simple
[rerere]
	enabled = true
[alias]
	lg2 = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	top = "!git log --oneline --graph --decorate `git rev-parse --abbrev-ref HEAD` ^origin/`git rev-parse --abbrev-ref HEAD`"
	br = branch
	dt = difftool
	mt = mergetool
	co = checkout
	cob = checkout -b
	ci = commit
	st = status
	hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --decorate --date=short
	lg = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	lg3 = log --graph --oneline --all
  cleanup = "!git branch --merged | grep  -v '\\*\\|master\\|develop' | xargs -n 1 git branch -d"

# Show files changed in each commit
	ll = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --numstat

# Grep the log
	glag = log -E -i --grep

# The extra '&& :' is needed: https://stackoverflow.com/a/25915221
	sync = !git fetch --all --prune && git rebase -p --autostash $1 && :

# Commits everything in my working directory and then does a hard reset to remove that commit.
# You can reach that commit later in 'git reflog'
	wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard

# Get the current branch name (not so useful in itself, but used in other aliases)
	branch-name = !git rev-parse --abbrev-ref HEAD

# Push the current branch to the remote "origin", and set it to track
# the upstream branch
	publish = !git push -u origin $(git branch-name)

# Delete the remote version of the current branch
	unpublish = !git push origin :$(git branch-name)

	uncommit = !git reset --soft HEAD^
	unstage = !git reset
	upstream = rev-parse --abbrev-ref --symbolic-full-name @{upstream}

	bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs git branch -d; }; f"
	bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"

# Rename [branch] to done-[branch]
	done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"
	up = pull --rebase --autostash
[color]
	diff = auto
	status = auto
	branch = auto
	ui = auto
[color "diff"]
	meta = blue
	frag = black
	old = red
	new = green
[color "status"]
	added = green
	changed = yellow
	untracked = cyan
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[user]
	email = michael.stengel@walmart.com
	name = Michael Stengel
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[commit]
	template = /Users/mstenge/.stCommitMsg
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
